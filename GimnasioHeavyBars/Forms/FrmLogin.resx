<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAA6xJREFUaEPtmLmvTGEYxse+BwURjQa1CEJQklBI1CokEiGxNOgIf4Ke4v4HNERC
        aIhEiMTWKGyJpUBj5/nFecZ7z5xt5h4zt/ie5JeZe877ve/zrXPO7SQlJSUlJSX1akoJk1IYmyamZ0wV
        ZeKe42gzsk7ZNBQJo/PE4gy+l3XMeYbSGYowerHYHLFRHBUXxC3xTLwRHzL4zjXuXRTEbhJzhVWUuzXl
        k88Q2wWGX4rfA0JbOkQucqLWOxKXynxxSDwRGPiVfZov4rv4KbgX4Rr3iIltnOOpOCyogWLdgcQIOAHr
        d794IWJR+CauiLPidnatCmLOCdrQ1tedkxrU8p7BQ9+z4dMCrRF3hIu40H1xTCwRy8UNEY0U4XvE0oa2
        5CCX7zuGmtRGeCk7BHpEoINPCKadhCwBJ94p3MGV4rWIMVU4hja0ReTaITyDjqH2SYGir1J5ySwSlwRJ
        PM0U3COYTk8pp8g9EeOa4Fja+iRyTmp4QBx3WeAJle4Lj+gq4U36NfscE5zniASz/n7tnBKxUD+4DTkQ
        OW2OWtTkvj3gabVA9tqVL2wQ7wQNfghOjH0CMX3EeaT4cXouiG2ydPK4DTnIhchNDS+VvQIPeCEWb3hE
        3U44eIv4JJz4lYjBjvMobRPRSB1Fm9ttyYWc24OF8IAXx+MRr8ieOuvEZ+Eij8QKgbo9zeS/2VzEepOX
        QVEb5TN2xG29Uctq4QVPxNIer3ju6ppw0rtioUBFG8ZJz4toogqWwEdB8aIOkAvlO4DsAU94c1s8d5Xv
        gHd8UcKmHfCoPxTrxQKxS7wXXKcj/XQAT6UdYDpYWx6dx2KiS8i5Ngs0M/s8KLjOrLhtkyWEJ+cdt4TK
        NjFn8aCb2OZZNssEp8tsgbYK7tHObes2cfyhLNzEMfitIHiix6iv7RbIM3BGcN2/A1XHKLXjMYq3OKjj
        5Att/ZB5FljzB8RacVp42biNl0+THzK8oR7zVtwwbT1KuCPxb8c2fZTAS+2jhMX0eQrbeJjDMEuAe+Ry
        DG3iwxw5/dTrGOLxgKKvWhFogzzS+ikRMx7RB+K4WCp4NL4uHMNnEb73Xx+nLaY0ngpVLzRXBS8pk+aF
        JooE7kjdKyUbzsvEo2m8hMpeKcnZ6itlFCPANHokeAHn7Oal3rMyCEN5qY8qSu5/qxwRdOim4AU9/28V
        ro3s3yp5UaRqilm//Dhx9AHfyzah8wzFeJHcGUYPqk4L7jlupKbrhLEikpKSkpKSkv6p0/kDx7QkG4Op
        EFQAAAAASUVORK5CYII=
</value>
  </data>
</root>